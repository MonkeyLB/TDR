{
    "collab_server" : "",
    "contents" : "#' compute the empirical cumulative density.\n#'\n#' compute the empirical cumulative density given two random variables,\n#' which will be the input for the mixture copula model\n#'\n#' @param x1 a vector of data for replicate 1, i.g., sequencing counts for each genomic locus.\n#' @param x2 a vector of data for replicate 2. It must have the same length with x1.\n#' @details The data was first ranked with a ties method equals to \"random\". The cumulative density\n#' function (cdf) is then obtained using the ecdf function. To avoid infinity, a factor is multiplied\n#' to the cdf. The factor is the \\code{length(x1)/[length(x1)+1]}.\n#' @return The empdist function returns a matrix that has two columns, each stores the empirical\n#' cumulative density of one replicate.\n#' @references  Q. Li, J. B. Brown, H. Huang and P. J. Bickel. (2011) Measuring reproducibility of high-throughput\n#' experiments. Annals of Applied Statistics, Vol. 5, No. 3, 1752-1779.\n#' @export\n#' @examples\n#' data(Chipseq_TF)\n#' x1 <- Chipseq_TF[,1]\n#' x2 <- Chipseq_TF[,2]\n#' empdist(x1, x2)\n\nempdist = function(x1, x2){\n  x1r = rank(x1, ties.method=\"random\")\n  x2r = rank(x2, ties.method=\"random\")\n  x1.cdf.func = ecdf(x1r); x2.cdf.func = ecdf(x2r)\n  afactor <- length(x1r)/(length(x1r) + 1)\n  x1.cdf <- x1.cdf.func(x1r) * afactor\n  x2.cdf <- x2.cdf.func(x2r) * afactor\n  u = cbind(x1.cdf, x2.cdf)\n  return(u)\n}\n",
    "created" : 1466100597178.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3253331368",
    "id" : "37418808",
    "lastKnownWriteTime" : 1466183825,
    "last_content_update" : 1466183825362,
    "path" : "~/TDR/R/empdist.R",
    "project_path" : "R/empdist.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}